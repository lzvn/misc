(define (% x y) (modulo x y))
(define (count-change amount)
  (define (coin-value type)
	(cond ((= type 0) 0)
		  ((= type 1) 1)
		  ((= type 2) 5)
		  ((= type 3) 10)
		  ((= type 4) 25)
		  ((= type 5) 50)))
  (define (cc-iter amount coin-type count)
	(cond ((< amount 0) 0)
		  ((= amount 0) 1)
		  ((= coin-type 0) count)
		  ((< amount (coin-value coin-type)) (cc-iter amount (- coin-type 1) count))
		  (())
		  ))
  (cc-iter amount 5 0))

(display (count-change 100))
(newline)
